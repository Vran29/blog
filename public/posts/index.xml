<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Eason Li</title>
    <link>https://blog.eason.fr.to/posts/</link>
    <description>Recent content in Posts on Eason Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Apr 2024 13:02:04 +1000</lastBuildDate>
    <atom:link href="https://blog.eason.fr.to/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redesigning SchoolBox</title>
      <link>https://blog.eason.fr.to/posts/redesigning-schoolbox/</link>
      <pubDate>Sat, 20 Apr 2024 13:02:04 +1000</pubDate>
      <guid>https://blog.eason.fr.to/posts/redesigning-schoolbox/</guid>
      <description>I redesigned SchoolBox because the current design is outdated and doesn&amp;rsquo;t even support dark mode. The new design will be more modern and user-friendly. I created this as a concept art. And schoolbox please don&amp;rsquo;t sue me. Thank you for reading this post. If you have any feedback or suggestions, please feel free to leave a comment below.</description>
    </item>
    <item>
      <title>Moving away from Github Pages to Cloudflare Pages</title>
      <link>https://blog.eason.fr.to/posts/moving-away-from-github-pages-to-cloudflare-pages/</link>
      <pubDate>Wed, 17 Apr 2024 13:02:04 +1000</pubDate>
      <guid>https://blog.eason.fr.to/posts/moving-away-from-github-pages-to-cloudflare-pages/</guid>
      <description>Context For almost all of my projects, I have been using GitHub Pages because it nicely integrates with GitHub. However, for some of my projects, GitHub Pages are just not sufficient. With GitHub Pages, there is a cap of 100 GB bandwidth per month and 1 GB storage, which is inadequate for some of my projects. Therefore, I decided to migrate to Cloudflare Pages.&#xA;Why Cloudflare Pages? My website is powered by Cloudflare, obviously.</description>
    </item>
    <item>
      <title>How To Build A Simple Website With Hugo</title>
      <link>https://blog.eason.fr.to/posts/how-to-build-a-simple-website-with-hugo/</link>
      <pubDate>Tue, 16 Apr 2024 13:02:04 +1000</pubDate>
      <guid>https://blog.eason.fr.to/posts/how-to-build-a-simple-website-with-hugo/</guid>
      <description>Introduction In this blog post, I&amp;rsquo;ll demonstrate how to construct a basic website using Hugo. For those unfamiliar, Hugo is a static site generator written in Go, known for its speed and user-friendliness. It&amp;rsquo;s versatile enough to create anything from straightforward blogs to intricate websites. As an example, this very blog post you&amp;rsquo;re reading is crafted using Hugo with the Paper theme.&#xA;Prerequisites Before we dive in, ensure you have the following:</description>
    </item>
    <item>
      <title>How I Created A Simple Python API For Generating Random Word</title>
      <link>https://blog.eason.fr.to/posts/how-i-created-a-simple-python-api-for-generating-random-word/</link>
      <pubDate>Mon, 15 Apr 2024 13:02:04 +1000</pubDate>
      <guid>https://blog.eason.fr.to/posts/how-i-created-a-simple-python-api-for-generating-random-word/</guid>
      <description>Context I created a simple Python API that generates a random word upon request. This project was inspired by Fireship&amp;rsquo;s Node.js API video. I simply created this API for fun, not as a side hustle, and I made the API open-source on my GitHub page.&#xA;Creating the API First, I searched YouTube and found a video about creating a simple API using Flask. I watched the video and followed along. Then, I asked ChatGPT to generate a list of words ordered alphabetically (A-Z).</description>
    </item>
    <item>
      <title>Random Word API</title>
      <link>https://blog.eason.fr.to/posts/random-word-api/</link>
      <pubDate>Mon, 15 Apr 2024 13:02:04 +1000</pubDate>
      <guid>https://blog.eason.fr.to/posts/random-word-api/</guid>
      <description>I created a simple random word api that will generate a random word upon request. To use this, send a GET request to this url:&#xA;http://easapi.pythonanywhere.com/api?api_key=Il3KG8LWRwtJ2bMFWT3bpvlMZS1vitJf8LhT95AIRtLDj6CkHLmQm7nnOorUWaqn7ASABJVtDpOsCAsKpZNtRVo3exppbpL99x5cstbYugMmK0FyUBJNjePULoty7YiX This URL inculdes the api key and no other configuration is needed.&#xA;Please don&amp;rsquo;t spam the api, it&amp;rsquo;s hosted on a free server. More server will be added soon.</description>
    </item>
    <item>
      <title>Effortlessly Manage Docker With Portainer: A Step by Step Guide</title>
      <link>https://blog.eason.fr.to/posts/effortlessly-manage-docker-with-portainer-a-step-by-step-guide/</link>
      <pubDate>Sun, 14 Apr 2024 13:02:04 +1000</pubDate>
      <guid>https://blog.eason.fr.to/posts/effortlessly-manage-docker-with-portainer-a-step-by-step-guide/</guid>
      <description>Portainer: A Web UI for Docker Management&#xA;Portainer is a web UI tool for Docker that allows you to manage Docker containers, Kubernetes clusters, and Docker Compose stacks all in one convenient interface. In this blog post, I&amp;rsquo;ll show you how to install Portainer using Docker.&#xA;Prerequisites&#xA;Ensure Docker is installed and running on your system. You&amp;rsquo;ll need root privileges to create the Docker volume. (Optional) Configure a firewall whitelist rule for Portainer&amp;rsquo;s access (if applicable).</description>
    </item>
    <item>
      <title>How To Setup A Free Wordpress Website With Infinityfree</title>
      <link>https://blog.eason.fr.to/posts/how-to-setup-a-free-wordpress-website-with-infinityfree/</link>
      <pubDate>Sun, 14 Apr 2024 13:02:04 +1000</pubDate>
      <guid>https://blog.eason.fr.to/posts/how-to-setup-a-free-wordpress-website-with-infinityfree/</guid>
      <description>In this blog post, I&amp;rsquo;m going to show you how to host a free WordPress website using InfinityFree.&#xA;Things you&amp;rsquo;ll need:&#xA;An email address A computer Some knowledge Things you might want to know:&#xA;Unlimited Bandwidth 5GB Disk Space 50000 daily hit limit No email account 30019 inodes limit Free ssl certificate 1. Sign Up for InfinityFree&#xA;First, open your email client and head over to the InfinityFree website (https://www.infinityfree.com/). Signing up is pretty straightforward.</description>
    </item>
    <item>
      <title>Spice Up Your Terminal With Oh My Zsh</title>
      <link>https://blog.eason.fr.to/posts/spice-up-your-terminal-with-oh-my-zsh/</link>
      <pubDate>Sun, 14 Apr 2024 13:02:04 +1000</pubDate>
      <guid>https://blog.eason.fr.to/posts/spice-up-your-terminal-with-oh-my-zsh/</guid>
      <description>Oh My Zsh is an open-source, community-driven framework for managing your zsh configuration. - Oh My ZSH Github&#xA;In this blog post, I will guide you to install Oh My Zsh on your computer. Oh My Zsh allows you to customize your terminal prompt.&#xA;Pre-requisites: MacOS or Linux because Oh My Zsh works best on Unix-based systems (WSL will work) curl or wget Install zsh: Ubuntu/Debian: sudo apt install zsh Fedora: sudo yum install zsh Set zsh as default shell: chsh -s /bin/zsh Note: For some systems, you need to log out and log in again to take effect.</description>
    </item>
  </channel>
</rss>
